gg
gg <- gg + geom_map(data=db, map=all_states,
aes(fill=Murder, map_id=region),
color="#ffffff", size=0.15)
gg <- ggplot()
gg <- gg + geom_map(data=all_states, map=all_states,
aes(x=long, y=lat, map_id=region),
fill="#ffffff", color="#ffffff", size=0.15)
gg <- gg + geom_map(data=db, map=all_states,
aes(fill=value, map_id=region),
color="#ffffff", size=0.15)
gg
all_states
ggplot() +
geom_map(data=all_states, map=all_states,
aes(x=long, y=lat, map_id=region),
fill="#ffffff", color="#ffffff", size=0.15)
db
ids2filter <- actual_target$program==program & actual_target$target==target
db <- data.frame(value=actual_target[ids2filter,time_frame],region  = actual_target[ids2filter,'state'])
db
ggplot() +
geom_map(data=all_states, map=all_states,
aes(x=long, y=lat, map_id=region),
fill="#ffffff", color="#ffffff", size=0.15) +
geom_map(data=db, map=all_states,
aes(fill=value, map_id=region),
color="#ffffff", size=0.15)
ggplot() +
geom_map(data=all_states, map=all_states,
aes(x=long, y=lat, map_id=region),
fill="#ffffff", color="#ffffff", size=0.15) +
geom_map(data=db, map=all_states,
aes(fill=value, map_id=region),
color="#ffffff", size=0.15) +
scale_colour_gradient( low = "#132B43", high = "#56B1F7", space = "Lab", na.value = "grey50",
guide = "colourbar")
ggplot() +
geom_map(data=all_states, map=all_states,
aes(x=long, y=lat, map_id=region),
fill="#ffffff", color="#ffffff", size=0.15) +
geom_map(data=db, map=all_states,
aes(fill=value, map_id=region),
color="#ffffff", size=0.15) +
scale_colour_continuous( low = "#132B43", high = "#56B1F7", space = "Lab", na.value = "grey50",
guide = "colourbar")
ggplot() +
geom_map(data=all_states, map=all_states,
aes(x=long, y=lat, map_id=region),
fill="#ffffff", color="#ffffff", size=0.15) +
geom_map(data=db, map=all_states,
aes(fill=value, map_id=region),
color="#ffffff", size=0.15) +
scale_fill_continuous( low = "#132B43", high = "#56B1F7", space = "Lab", na.value = "grey50",
guide = "colourbar")
ggplot() +
geom_map(data=all_states, map=all_states,
aes(x=long, y=lat, map_id=region),
fill="#ffffff", color="#ffffff", size=0.15) +
geom_map(data=db, map=all_states,
aes(fill=value, map_id=region),
#color="#ffffff",
size=0.15) +
scale_fill_continuous( low = "#132B43", high = "#56B1F7", space = "Lab", na.value = "grey50",
guide = "colourbar")
ggplot() +
geom_map(data=all_states, map=all_states,
aes(x=long, y=lat, map_id=region),
fill="#ffffff", color="#ffffff", size=0.15) +
geom_map(data=db, map=all_states,
aes(fill=value, map_id=region),
color="#ffffff",
size=0.15) +
scale_fill_continuous(low="black", high="pink", limits=c(0.9,1.3))
ggplot() +
geom_map(data=all_states, map=all_states,
aes(x=long, y=lat, map_id=region),
fill="#ffffff", color="#ffffff", size=0.15) +
geom_map(data=db, map=all_states,
aes(fill=value, map_id=region),
color="#ffffff",
size=0.15) +
scale_fill_continuous(low="red", high="green", limits=c(0.9,1.3))
ggplot() +
geom_map(data=all_states, map=all_states,
aes(x=long, y=lat, map_id=region),
fill="#ffffff", color="#ffffff", size=0.15) +
geom_map(data=db, map=all_states,
aes(fill=value, map_id=region),
color="#ffffff",
size=0.15) +
scale_fill_continuous(low="red", high="green", limits=c(0.8,1.3))
ggplot() +
geom_map(data=all_states, map=all_states,
aes(x=long, y=lat, map_id=region),
fill="#ffffff", color="#ffffff", size=0.15) +
geom_map(data=db, map=all_states,
aes(fill=value, map_id=region),
color="#ffffff",
size=0.15) +
scale_fill_continuous(low="red", high="dark-green", limits=c(0.8,1.3))
ggplot() +
geom_map(data=all_states, map=all_states,
aes(x=long, y=lat, map_id=region),
fill="#ffffff", color="#ffffff", size=0.15) +
geom_map(data=db, map=all_states,
aes(fill=value, map_id=region),
color="#ffffff",
size=0.15) +
scale_fill_continuous(low="red", high="#2ca25f", limits=c(0.8,1.3))
help("scale_fill_continuous")
ggplot() +
geom_map(data=all_states, map=all_states,
aes(x=long, y=lat, map_id=region),
fill="#ffffff", color="#ffffff", size=0.15) +
geom_map(data=db, map=all_states,
aes(fill=value, map_id=region),
color="#ffffff",
size=0.15) +
scale_fill_continuous(colours=c("red","yellow","green"),
values  = c(0.8,0.95,1.3))
ggplot() +
geom_map(data=all_states, map=all_states,
aes(x=long, y=lat, map_id=region),
fill="#ffffff", color="#ffffff", size=0.15) +
geom_map(data=db, map=all_states,
aes(fill=value, map_id=region),
color="#ffffff",
size=0.15) +
scale_fill_gradient(colours=c("red","yellow","green"),
values  = c(0.8,0.95,1.3))
ggplot() +
geom_map(data=all_states, map=all_states,
aes(x=long, y=lat, map_id=region),
fill="#ffffff", color="#ffffff", size=0.15) +
geom_map(data=db, map=all_states,
aes(fill=value, map_id=region),
color="#ffffff",
size=0.15) +
# scale_fill_gradient(colours=c("red","yellow","green"),
#                       values  = c(0.8,0.95,1.3))
scale_fill_continuous(low="red", mid="yellow",high="#2ca25f", limits=c(0.8,1,1.3))
ggplot() +
geom_map(data=all_states, map=all_states,
aes(x=long, y=lat, map_id=region),
fill="#ffffff", color="#ffffff", size=0.15) +
geom_map(data=db, map=all_states,
aes(fill=value, map_id=region),
color="#ffffff",
size=0.15) +
# scale_fill_gradient(colours=c("red","yellow","green"),
#                       values  = c(0.8,0.95,1.3))
scale_fill_gradient2(low="red", mid="yellow",high="#2ca25f", limits=c(0.8,1,1.3))
ggplot() +
geom_map(data=all_states, map=all_states,
aes(x=long, y=lat, map_id=region),
fill="#ffffff", color="#ffffff", size=0.15) +
geom_map(data=db, map=all_states,
aes(fill=value, map_id=region),
color="#ffffff",
size=0.15) +
# scale_fill_gradient(colours=c("red","yellow","green"),
#                       values  = c(0.8,0.95,1.3))
scale_fill_gradient2(low="red", mid="yellow",high="#2ca25f", limits=c(0.8,1.3))
ggplot() +
geom_map(data=all_states, map=all_states,
aes(x=long, y=lat, map_id=region),
fill="#ffffff", color="#ffffff", size=0.15) +
geom_map(data=db, map=all_states,
aes(fill=value, map_id=region),
color="#ffffff",
size=0.15) +
# scale_fill_gradient(colours=c("red","yellow","green"),
#                       values  = c(0.8,0.95,1.3))
scale_fill_gradient2(low="red", mid="yellow",high="#2ca25f", limits=c(0.8,1.3),midpoint = 0.95)
ggplot() +
geom_map(data=all_states, map=all_states,
aes(x=long, y=lat, map_id=region),
fill="#ffffff", color="#ffffff", size=0.15) +
geom_map(data=db, map=all_states,
aes(fill=value, map_id=region),
color="#ffffff",
size=0.15) +
# scale_fill_gradient(colours=c("red","yellow","green"),
#                       values  = c(0.8,0.95,1.3))
scale_fill_gradient2(low="red", mid="yellow",high="#2ca25f", limits=c(0.8,1.3),midpoint = 0.99)
######################################################
## SCRIPT TO GENERATE TABLES FOR BDT SCORECARD DEMO ##
######################################################
#### 00. libraries and others ####
rm(list=ls())
library(maps)
library(ggplot2)
library(xlsx)
actual <- read.xlsx('data.xlsx',sheetIndex=1)
actual_target <- read.xlsx('data.xlsx',sheetIndex=2)
SNAP_targets<- read.xlsx('data.xlsx',sheetIndex=3)
MEDICARE_targets <- read.xlsx('data.xlsx',sheetIndex=4)
RENT_targets <- read.xlsx('data.xlsx',sheetIndex=5)
all_states <- map_data("state")
#names(all_states)[5] <- 'state'
BDT_states <- c(31,7,8,6,37,29,45,32,47,28,18,19,20,38,44)
BDT_states <- unique(all_states$region)[sort(BDT_states)]
n_states <- length(BDT_states)
#### 02. filter the data and ggplot ####
all_states <- all_states[all_states$region %in% BDT_states,]
#filter the data
program = 'SNAP'
target='out_mail'
time_frame= 'YTD'
ids2filter <- actual_target$program==program & actual_target$target==target
db <- data.frame(value=actual_target[ids2filter,time_frame],region  = actual_target[ids2filter,'state'])
ggplot() +
geom_map(data=all_states, map=all_states,
aes(x=long, y=lat, map_id=region),
fill="#ffffff", color="#ffffff", size=0.15) +
geom_map(data=db, map=all_states,
aes(fill=value, map_id=region),
color="#ffffff",
size=0.15) +
# scale_fill_gradient(colours=c("red","yellow","green"),
#                       values  = c(0.8,0.95,1.3))
scale_fill_gradient2(low="red", mid="yellow",high="#2ca25f", limits=c(0.8,1.3),midpoint = 0.99)
scale_fill_continuous( low = "#132B43", high = "#56B1F7", space = "Lab", na.value = "grey50",
guide = "colourbar")
ggplot() +
geom_map(data=all_states, map=all_states,
aes(x=long, y=lat, map_id=region),
fill="#ffffff", color="#ffffff", size=0.15) +
geom_map(data=db, map=all_states,
aes(fill=value, map_id=region),
color="#ffffff",
size=0.15) +
scale_fill_gradient2(low="red", mid="yellow",high="#2ca25f", limits=c(0.8,1.3),midpoint = 0.99) +
theme(legend.title='target achievement')
ggplot() +
geom_map(data=all_states, map=all_states,
aes(x=long, y=lat, map_id=region),
fill="#ffffff", color="#ffffff", size=0.15) +
geom_map(data=db, map=all_states,
aes(fill=value, map_id=region),
color="#ffffff",
size=0.15) +
scale_fill_gradient2(low="red", mid="yellow",high="#2ca25f", limits=c(0.8,1.3),midpoint = 0.99) +
theme(legend.position="none")
ggplot() +
geom_map(data=all_states, map=all_states,
aes(x=long, y=lat, map_id=region),
fill="#ffffff", color="#ffffff", size=0.15) +
geom_map(data=db, map=all_states,
aes(fill=value, map_id=region),
color="#ffffff",
size=0.15) +
scale_fill_gradient2(low="red", mid="yellow",high="#2ca25f", limits=c(0.8,1.3),midpoint = 0.99) +
theme(legend.position="none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
ggplot() +
geom_map(data=all_states, map=all_states,
aes(x=long, y=lat, map_id=region),
fill="#ffffff", color="#ffffff", size=0.15) +
geom_map(data=db, map=all_states,
aes(fill=value, map_id=region),
color="#ffffff",
size=0.15) +
scale_fill_gradient2(low="red", mid="yellow",high="#2ca25f", limits=c(0.8,1.3),midpoint = 0.99) +
theme(legend.position="none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
shiny::runApp()
runApp()
View(actual)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
head(actual_target)
runApp()
runApp()
runApp()
runApp()
runApp()
actual
runApp()
actual
df
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
df <- actual[ids2filter,]
df
actual <- read.xlsx('data.xlsx',sheetIndex=1)
df_2 <- actual[ids2filter,c(4:15)]
df2
df_2
actual[ids2filter,1]
rownames(df_2) <- actual[ids2filter,1]
df_2
ggplot(df_2) +barplot()
ggplot(df_2) +geom_bar()
ggplot(data = df_2) +
geom_point() +
geom_line()
lineplot(df_2)
plot(df_2)
df_2
plot(t(df_2))
ggplot(df_2) + geom_bar()
help(geom_bar)
ggplot() + geom_bar(df_2)
ggplot(df_2) + geom_bar(stat = "identity")
# geom_bar is designed to make it easy to create bar charts that show
# counts (or sums of weights)
g <- ggplot(mpg, aes(class))
g
# geom_bar is designed to make it easy to create bar charts that show
# counts (or sums of weights)
g <- ggplot(mpg, aes(class))
# Number of cars in each class:
g + geom_bar()
# Total engine displacement of each class
g + geom_bar(aes(weight = displ))
mpg
# To show (e.g.) means, you need stat = "identity"
df <- data.frame(trt = c("a", "b", "c"), outcome = c(2.3, 1.9, 3.2))
ggplot(df, aes(trt, outcome)) +
geom_bar(stat = "identity")
t(df_2)
df_2 <- t(actual[ids2filter,c(1,4:15)])
df_2
actual[ids2filter,c(1,4:15)]
t(actual[ids2filter,c(4:15)])
df_2 <- t(actual[ids2filter,c(4:15)])
ggplot(df, aes(trt, outcome)) +
geom_point()
df <- data.frame(x = rep(c(2.9, 3.1, 4.5), c(5, 10, 4)))
ggplot(df, aes(x)) + geom_bar()
hel(aes)
help(aes)
df_2 <- t(actual[ids2filter,c(4:15)])
ggplot() + geom_bar(stat = "identity")
ggplot(df_2) + geom_bar(stat = "identity")
plot(df_2)
t(actual[ids2filter,c(4:15)])
df_2 <- t(actual[ids2filter,c(4:15)])
actual[ids2filter,state]
actual[ids2filter,'state']
colnames(df_2) <- actual[ids2filter,state]
colnames(df_2) <- actual[ids2filter,'state']
df_2
df_2$month <- rownames(df_2)
rownames(df_2)
names(df_2)
df_2
df_2 <- t(actual[ids2filter,c(4:15)])
colnames(df_2) <- actual[ids2filter,'state']
df_2
rownames(df_2)
df_2$month <- rownames(df_2)
df_2 <- t(actual[ids2filter,c(4:15)])
colnames(df_2) <- actual[ids2filter,'state']
df_2
df_2$m <- rownames(df_2)
rownames(df_2)
df_2 <- t(actual[ids2filter,c(4:15)])
colnames(df_2) <- actual[ids2filter,'state']
row.names(df_2)
df_2$mm <- row.names(df_2)
df_2 <- t(actual[ids2filter,c(4:15)])
colnames(df_2) <- actual[ids2filter,'state']
class(df_2)
df_2 <- t(actual[ids2filter,c(4:15)])
colnames(df_2) <- as.data.frame(actual[ids2filter,'state'])
df_2 <- t(actual[ids2filter,c(4:15)])
colnames(df_2) <- data.frame(actual[ids2filter,'state'])
df_2 <- t(actual[ids2filter,c(4:15)])
colnames(df_2) <- as.data.frame(actual[ids2filter,'state'])
df_2 <- as.data.frame(t(actual[ids2filter,c(4:15)]))
colnames(df_2) <- actual[ids2filter,'state']
df_2$month <- rownames(df_2)
df_2
ggplot(data = df_2, aes(x = month, y ="Identity") +
geom_bar()
ggplot(data = df_2, aes(x = month, y ="Identity")) +
geom_bar()
ggplot(data = df_2) +
geom_bar(aes(x = month, y ="Identity"))
runApp()
colnames(actual)
colnames(actual)[4:15]
rbind(db_barplot, actual[,c('state','program','target',month)])
db_barplot <- NULL
rbind(db_barplot, actual[,c('state','program','target',month)])
month<-'jan'
rbind(db_barplot, actual[,c('state','program','target',month)])
rbind(db_barplot, actual[,c('state','program','target',month)],month=month)
data.frame(actual[,c('state','program','target')],month=month)
rbind(db_barplot, data.frame(actual[,c('state','program','target')],month=month)
rbind(db_barplot, data.frame(actual[,c('state','program','target')],month=month))
rbind(db_barplot, data.frame(actual[,c('state','program','target')],month=month))
colnames(actual)[4:15]
rbind(db_barplot, data.frame(actual[,c('state','program','target',month)],month=month))
rbind(db_barplot, data.frame(actual[,c('state','program','target',value=month)],month=month))
rbind(db_barplot, data.frame(actual[,c('state','program','target')],value=actual[,month],month=month))
for (month in colnames(actual)[4:15]) {
db_barplot <- rbind(db_barplot, data.frame(actual[,c('state','program','target')],value=actual[,month],month=month))
}
db_barplot
ggplot(data = df_2) +
geom_bar(aes(x = month, y =value,fill=state))
ggplot(data = db_barplot) +
geom_bar(aes(x = month, y =value,fill=state))
head(db_barplot)
df <- data.frame(trt = c("a", "b", "c"), outcome = c(2.3, 1.9, 3.2))
ggplot(t(df_2), aes(trt, outcome)) +
geom_bar(stat = "identity")
ggplot(df, aes(trt, outcome)) +
geom_bar(stat = "identity")
db_barplot <- NULL
for (month in colnames(actual)[4:15]) {
db_barplot <- rbind(db_barplot, data.frame(actual[,c('state','program','target')],value=actual[,month],month=month))
}
program <- 'SNAP'
target <- 'out_mail'
ids2filter2 <- db_barplot$program==program & db_barplot$target==target
db_barplot <- db_barplot[ids2filter2,c('state','value','month')]
db_barplot
ggplot(data = db_barplot) +
geom_bar(aes(x = month, y =value,fill=state))
ggplot(db_barplot,aes(x = month, y =value,fill=state)) +
geom_bar()
db_barplot <- NULL
for (month in colnames(actual)[4:13]) {
db_barplot <- rbind(db_barplot, data.frame(actual[,c('state','program','target')],value=actual[,month],month=month))
}
program <- 'SNAP'
target <- 'out_mail'
ids2filter2 <- db_barplot$program==program & db_barplot$target==target
db_barplot <- db_barplot[ids2filter2,c('state','value','month')]
ggplot(db_barplot,aes(x = month, y =value,fill=state)) +
geom_bar()
db_barplot
db_barplot <- NULL
for (month in colnames(actual)[4:15]) {
db_barplot <- rbind(db_barplot, data.frame(actual[,c('state','program','target')],value=actual[,month],month=month))
}
program <- 'SNAP'
target <- 'out_mail'
ids2filter2 <- db_barplot$program==program & db_barplot$target==target
db_barplot <- db_barplot[ids2filter2,c('state','value','month')]
db_barplot
ggplot(db_barplot,aes(x = month, y =value,fill=state)) +
geom_bar()
ggplot(db_barplot,aes(x = month, y =value,fill=state)) +
geom_bar(stat="identity")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
#transform ds as dynamic table
ggplot(db_barplot,aes(x = month, y =value,fill=state)) +
geom_bar(stat="identity")
ggplot(db_barplot,aes(x = month, y =value,fill=state)) +
geom_bar(stat="identity") +
geom_line(y=15000)
ggplot(db_barplot,aes(x = month, y =value,fill=state)) +
geom_bar(stat="identity") +
geom_hline(yintercept=1500)
#transform ds as dynamic table
ggplot(db_barplot,aes(x = month, y =value,fill=state)) +
geom_bar(stat="identity") +
geom_hline(yintercept=150000)
targets<- read.xlsx('data.xlsx',sheetIndex=3)
targets
targets<- read.xlsx('data.xlsx',sheetIndex=3)
runApp('~/Documents/CrimeMap/police_agents_v2')
runApp()
targets
runApp()
targets$MTD
runApp()
targets<- read.xlsx('data.xlsx',sheetIndex=3)
targets
targets$MTD
ids2filterState2
runApp()
runApp()
runApp()
runApp()
